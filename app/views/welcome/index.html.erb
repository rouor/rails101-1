<!doctype html>






<html class="theme-next pisces use-motion">
<head>
  <meta charset="UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>



<meta http-equiv="Cache-Control" content="no-transform" />
<meta http-equiv="Cache-Control" content="no-siteapp" />














  <link href="/vendors/fancybox/source/jquery.fancybox.css?v=2.1.5" rel="stylesheet" type="text/css" />

























    <link href="//fonts.googleapis.com/css?family=Lato:300,300italic,400,400italic,700,700italic&subset=latin,latin-ext" rel="stylesheet" type="text/css">







<link href="/vendors/font-awesome/css/font-awesome.min.css?v=4.4.0" rel="stylesheet" type="text/css" />

<link href="/css/main.css?v=5.0.1" rel="stylesheet" type="text/css" />


  <meta name="keywords" content="人人都是工程师," />








  <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico?v=5.0.1" />






<meta name="description" content="小心你的中文输入法在与计算机打交道的时候，中日韩国家的人因为输入的并非英文半角字符而造成的错误非常普遍，因为他们的输入法使用的是 CJKV “全角字符”，而非计算机编程语言可识别的“半角字符”（至于这两个词究竟是什么意思，来龙去脉是什么，自己 Google 一下就好）…… 因此新手有必要在使用编辑器书写代码的时候事先关闭非英文输入法。以后熟悉了之后，当然不再会因此浪费太多时间。
也需要因此做一些特">
<meta property="og:type" content="article">
<meta property="og:title" content="基本开发环境设置">
<meta property="og:url" content="http://xiaolai.li/2016/06/16/makecs-basic-dev-env-settup/index.html">
<meta property="og:site_name" content="{am} xiaolai">
<meta property="og:description" content="小心你的中文输入法在与计算机打交道的时候，中日韩国家的人因为输入的并非英文半角字符而造成的错误非常普遍，因为他们的输入法使用的是 CJKV “全角字符”，而非计算机编程语言可识别的“半角字符”（至于这两个词究竟是什么意思，来龙去脉是什么，自己 Google 一下就好）…… 因此新手有必要在使用编辑器书写代码的时候事先关闭非英文输入法。以后熟悉了之后，当然不再会因此浪费太多时间。
也需要因此做一些特">
<meta property="og:updated_time" content="2016-06-28T16:15:17.000Z">
<meta name="twitter:card" content="summary">
<meta name="twitter:title" content="基本开发环境设置">
<meta name="twitter:description" content="小心你的中文输入法在与计算机打交道的时候，中日韩国家的人因为输入的并非英文半角字符而造成的错误非常普遍，因为他们的输入法使用的是 CJKV “全角字符”，而非计算机编程语言可识别的“半角字符”（至于这两个词究竟是什么意思，来龙去脉是什么，自己 Google 一下就好）…… 因此新手有必要在使用编辑器书写代码的时候事先关闭非英文输入法。以后熟悉了之后，当然不再会因此浪费太多时间。
也需要因此做一些特">



<script type="text/javascript" id="hexo.configuration">
  var NexT = window.NexT || {};
  var CONFIG = {
    scheme: 'Pisces',
    sidebar: {"position":"right","display":"post"},
    fancybox: true,
    motion: true,
    duoshuo: {
      userId: undefined,
      author: '博主'
    }
  };
</script>

  <title> 基本开发环境设置 | {am} xiaolai </title>
</head>

<body itemscope itemtype="http://schema.org/WebPage" lang="zh-Hans">




<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-48155608-1', 'auto');
  ga('send', 'pageview');
</script>














  <div class="container one-collumn sidebar-position-right page-post-detail ">
    <div class="headband"></div>

    <header id="header" class="header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-inner"><div class="site-meta ">


  <div class="custom-logo-site-title">
    <a href="/"  class="brand" rel="start">
      <span class="logo-line-before"><i></i></span>
      <span class="site-title">{am} xiaolai</span>
      <span class="logo-line-after"><i></i></span>
    </a>
  </div>
  <p class="site-subtitle">an ever-growing brain</p>
</div>

<div class="site-nav-toggle">
  <button>
    <span class="btn-bar"></span>
    <span class="btn-bar"></span>
    <span class="btn-bar"></span>
  </button>
</div>

<nav class="site-nav">



    <ul id="menu" class="menu">


        <li class="menu-item menu-item-home">
          <a href="/" rel="section">

              <i class="menu-item-icon fa fa-fw fa-home"></i> <br />

            首页
          </a>
        </li>


        <li class="menu-item menu-item-about">
          <a href="/about" rel="section">

              <i class="menu-item-icon fa fa-fw fa-user"></i> <br />

            关于
          </a>
        </li>


        <li class="menu-item menu-item-archives">
          <a href="/archives" rel="section">

              <i class="menu-item-icon fa fa-fw fa-archive"></i> <br />

            归档
          </a>
        </li>


        <li class="menu-item menu-item-tags">
          <a href="/tags" rel="section">

              <i class="menu-item-icon fa fa-fw fa-tags"></i> <br />

            标签
          </a>
        </li>



    </ul>



</nav>

 </div>
    </header>

    <main id="main" class="main">
      <div class="main-inner">
        <div class="content-wrap">
          <div id="content" class="content">


  <div id="posts" class="posts-expand">









  <article class="post post-type-normal " itemscope itemtype="http://schema.org/Article">


      <header class="post-header">



          <h1 class="post-title" itemprop="name headline">



                基本开发环境设置


          </h1>


        <div class="post-meta">
          <span class="post-time">
            <span class="post-meta-item-icon">
              <i class="fa fa-calendar-o"></i>
            </span>
            <span class="post-meta-item-text">发表于</span>
            <time itemprop="dateCreated" datetime="2016-06-16T16:23:00+08:00" content="2016-06-16">
              2016-06-16
            </time>
          </span>





              <span class="post-comments-count">
                &nbsp; | &nbsp;
                <a href="/2016/06/16/makecs-basic-dev-env-settup/#comments" itemprop="discussionUrl">
                  <span class="post-comments-count disqus-comment-count" data-disqus-identifier="2016/06/16/makecs-basic-dev-env-settup/" itemprop="commentsCount"></span>
                </a>
              </span>









        </div>
      </header>



    <div class="post-body" itemprop="articleBody">





        <h2 id="小心你的中文输入法"><a href="#小心你的中文输入法" class="headerlink" title="小心你的中文输入法"></a>小心你的中文输入法</h2><p>在与计算机打交道的时候，中日韩国家的人因为输入的并非英文半角字符而造成的错误非常普遍，因为他们的输入法使用的是 CJKV “全角字符”，而非计算机编程语言可识别的“半角字符”（至于这两个词究竟是什么意思，来龙去脉是什么，自己 Google 一下就好）…… 因此新手有必要在使用编辑器书写代码的时候事先关闭非英文输入法。以后熟悉了之后，当然不再会因此浪费太多时间。</p>
<p>也需要因此做一些特定的配置。比如，应该在 <code>System Preference &gt; Language &amp; Region &gt; Preferred Languages</code><br>里将系统的首选语言设置成英文，这会在将来节省很多时间，</p>
<p>如果你使用中文输入法的话，那么，Spotlight 的快捷键与更换输入法的快捷键最好都重新设置一下，<strong>总之就是不要占用 <code>Control</code> 键 <kbd>⌃</kbd></strong>。请在 <code>System Preferences &gt; Keyboard &gt; Shortcuts</code> 里设置。</p>
<p>我的习惯是把 Spotlight 设置为 <code>⌥Space</code>，把更换输入法设置为 <code>⌘Space</code>；而 <code>Spotlight</code> 中，<code>Show Finder Search Window</code> 不使用快捷键；<code>Input Sources</code>中，<code>Select next source in Input menu</code> 不使用快捷键。</p>
<h2 id="命令行工具（Terminal-iTerm）的基本设置"><a href="#命令行工具（Terminal-iTerm）的基本设置" class="headerlink" title="命令行工具（Terminal/iTerm）的基本设置"></a>命令行工具（Terminal/iTerm）的基本设置</h2><p>用 Spotlight 呼出 <code>Terminal</code>，无论是谁，都得从熟悉它的使用开始。</p>
<p>打开 Terminal 之后，可以试试以下两个命令:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd /</span><br><span class="line">ls</span><br></pre></td></tr></table></figure>
<p>现在需要知道的就是，每一行命令都必须做到每个字符都不能错，输入正确之后，按回车键 <kbd>⏎</kbd> 执行命令。</p>
<p>接下来要做的事情，按步骤完成，但你肯定完全不知道自己在做什么，照着做就行了（为了保证不出错，请逐次拷贝粘贴以下命令行，而后再按回车键执行）：</p>
<p>(1)<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ~</span><br></pre></td></tr></table></figure></p>
<p>(2)<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_profile</span><br></pre></td></tr></table></figure></p>
<p>(3)<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.bash_prompt</span><br></pre></td></tr></table></figure></p>
<p>(4)<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -O https://raw.githubusercontent.com/donnemartin/dev-setup/master/.aliases</span><br></pre></td></tr></table></figure></p>
<p>全部完成之后，重启 Terminal（就是关掉退出之后，再重新打开）。刚才的命令完成了很多事情，只不过现在你搞不懂，你能看到的就是命令行提示变得花花绿绿了，各种颜色有不同的意义 —— 但以后再说。</p>
<p>接下来，要为 Terminal 换个皮肤 —— 天天要用的东西，不好看太难受了。我个人喜欢这两个：</p>
<blockquote>
<ul>
<li><a href="https://github.com/tomislav/osx-terminal.app-colors-solarized" target="_blank" rel="external">Solarized</a></li>
<li><a href="https://github.com/wtanna/Spacegray-OSX-Terminal-Theme" target="_blank" rel="external">Spacegray</a></li>
</ul>
</blockquote>
<p>去 Google 一下，找到你选的那个，使用说明都非常清楚的 —— 花点时间阅读就可以了。</p>
<p>要为所有与写代码相关的程序设置特定的字体，以便很容易识别出那些不小心输入的“全角字符”。我个人选择的是 <code>Courier New</code> 这个字体，因为这个字体的亚洲文字也挺好看，对我来说也更容易识别 —— 反正你要选择一个“等宽字体”。欧美的程序员偏爱 <code>Menlo</code> 之类的 —— 也许更多是因为他们没有亚洲输入法使用者的苦恼罢。</p>
<p>在 iMac 大屏幕上，我会把 Terminal 的字体设置为 20px …… 可问题是，你打开 Terminal 的 <code>Preferences &gt; Profiles &gt; Solarized Dark &gt; Text &gt; Font</code>，点 <code>Change</code> 按钮，跳出来的对话框里，你会发现你无法将字体设置为 <code>20</code>，下拉框里，<code>18</code> 之后就是 <code>24</code> 了…… 苹果的这个设计糊弄了很多人 —— 你这样：拖住对话框右下角横着拉，将对话框拉长到一定程度，你就发现那个字体选择框变成了“输入框”与“下拉选择框”的组合…… 你就可以在里面输入 <code>20</code> 了。</p>
<p>还有，Mac OSX 其实还有很多快捷键可以设置，其中一个比较重要的是 <code>New Terminal at Folder</code>，在<code>System Preferences &gt; Keyboard &gt; Shortcuts &gt; Services &gt; Files and Folders</code> 里可以找到。我把它设置成了 <kbd>⌃</kbd><kbd>⌥</kbd><kbd>⌘</kbd><kbd>T</kbd>，以后在 Finder 里，用鼠标选中某个文件夹（或称“目录”），然后按 <kbd>⌃</kbd><kbd>⌥</kbd><kbd>⌘</kbd><kbd>T</kbd>，就可以呼出 Terminal 并且将工作目录转至这个文件夹内…… 很方便。</p>
<p>好了，Terminal 的基本设置算是完成了。</p>
<p>另外，有三个 Mac OSX 系统自带的东西，工程师们会觉得不够用，进而造出更好的东西来替代，它们分别是：</p>
<blockquote>
<ul>
<li>Terminal → <a href="https://www.iterm2.com/" target="_blank" rel="external">iTerm</a></li>
<li>Finder → <a href="http://totalfinder.binaryage.com/" target="_blank" rel="external">TotalFinder</a> / <a href="http://www.cocoatech.com/pathfinder/" target="_blank" rel="external">Path Finder</a></li>
<li>Spotlight → <a href="https://qsapp.com/" target="_blank" rel="external">QuickSilver</a> / <a href="https://www.alfredapp.com/" target="_blank" rel="external">Alfred</a></li>
</ul>
</blockquote>
<p>我个人的选择是：</p>
<blockquote>
<p>iTerm &amp; TotalFinder &amp; Alfred</p>
</blockquote>
<p>建议你立刻硬选一组，别在这里浪费时间，往前走，要做的事情还很多很多。</p>
<p>下载 iTerm 之后，你要做的就是为它更换皮肤，更换字体，设置字体大小…… 其实你已经做过一遍了，和设置 Terminal 没什么太大差别。</p>
<h2 id="命令行的使用"><a href="#命令行的使用" class="headerlink" title="命令行的使用"></a>命令行的使用</h2><p>使用命令行工具，可以对系统下的文件（file）和目录（folder/dirctory/dir，这三个词在大多数情况下是一回事儿）进行罗列、创建、复制、移动、删除、修改等操作。</p>
<p>以下是一些最常用的命令（’<code>#</code>‘ 之后的文字是注释，输入命令的时候不能有它们）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ls #罗列当前目录下的内容</span><br><span class="line">cd #更换工作目录</span><br><span class="line">pwd #现实当前完整工作目录</span><br><span class="line">touch #创建一个文件</span><br><span class="line">mv #移动/更名文件或目录</span><br><span class="line">rm #删除文件活目录</span><br><span class="line">nano #使用 nano 编辑纯文本文件</span><br><span class="line">open #打开一个文件，就好像你在 Finder 里双击那个文件图标一样</span><br><span class="line">clear #清空屏幕</span><br><span class="line">sudo #用管理员身份去执行一个命令</span><br></pre></td></tr></table></figure>
<p>这些命令现在倒没必要马上深入研究，因为你早晚会不得不深入研究他们的。现在更必要的是学习 Terminal/iTerm2 的使用，有哪些快捷键等等…… 倒有个好去处，在 Github 上：</p>
<blockquote>
<p><a href="https://github.com/0nn0/terminal-mac-cheatsheet" target="_blank" rel="external">https://github.com/0nn0/terminal-mac-cheatsheet</a></p>
</blockquote>
<p>还有个 Cheatsheet 值得打印出来，反复看，用的时候随时参考，直到所有视觉记忆全部变成肌肉记忆为止……</p>
<blockquote>
<p>…… 或者说是，“直到把一般记忆变成脊椎记忆为止”，或者说是，“直到大脑皮层表面形成了专门的沟回为止”…… 反正都是一个意思：就是熟练到可以用潜意识即可完美完成的地步。</p>
</blockquote>
<p>倒是 <code>Cheatsheet</code> 这个词应该记住，以后不管学什么，都到网上搜索一下 <code>xxx cheatsheet</code>，多翻几个，一定有收获。</p>
<p>注意：<strong>“通读”是做工程师必须的能力</strong>。你不一定要全部能够理解（对任何人来说，最初都不可能做到），但你必须对整个文档有一个整体的认识。这就好像读书的时候，你能做到虽然不能完全读懂，但确实能够完整读完 —— 之后再多读几遍么！古人说的是对的：读书千遍其义自见。还有就是，若是从一开始就没有“通读”的意识，后面不知道会吃多大的亏，而且吃了多少亏自己都完全不知道…… 这很可怕。</p>
<p>举个简单的例子罢：</p>
<blockquote>
<p>很多工程师，用了好多年 Terminal，竟然都不知道竟然还有个快捷键能把光标前的两个词调换一下位置：按一下 <code>esc</code> 键，然后再按一下 <code>t</code> （通常标记为：⎋-t）…… 你想想看他们在过去的那么多年里，浪费了多少次键盘敲击？—— 虽然说起来、听起来没什么，可若是真的严肃起来去想，有什么比时间更重要的呢？浪费了大量的时间、浪费宝贵的生命，只不过是因为最初的时候没有养成“只要是重要的文档，必须通读至少一遍的习惯”而已。</p>
</blockquote>
<p>所以说，“优秀是一种习惯”真的并不是空话，是放之四海皆准的道理。随后的过程中，<strong>我们会建立很多很多的好习惯</strong>，甚至这句话本身也会在各个地方重复 —— 生活质量就是这样一点一点提高的，放在哪个领域里其实都一样。</p>
<h2 id="安装必要开发环境"><a href="#安装必要开发环境" class="headerlink" title="安装必要开发环境"></a>安装必要开发环境</h2><h3 id="XCode-Command-Line-Tool"><a href="#XCode-Command-Line-Tool" class="headerlink" title="XCode Command Line Tool"></a>XCode Command Line Tool</h3><p>过去安装这个东西费劲死了，在需要翻山越岭的情况下下载两个多 G 的东西，唉…… Mac OSX EI Capitan 之后，终于可以在命令行工具（<code>Terminal</code>）下这样安装了：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure>
<h3 id="安装-Homebrew"><a href="#安装-Homebrew" class="headerlink" title="安装 Homebrew"></a>安装 Homebrew</h3><p>还是在命令行工具中拷贝粘贴以下代码，而后按回车键 <kbd>⏎</kbd>……</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure>
<p>随后再次在命令行工具中拷贝粘贴以下代码，而后按回车键 <kbd>⏎</kbd>……</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &apos;export PATH=&quot;/usr/local/bin:$PATH&quot;&apos; &gt;&gt; ~/.bash_profile</span><br></pre></td></tr></table></figure>
<h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure>
<h3 id="安装-rvm-与-Ruby-2-3-1"><a href="#安装-rvm-与-Ruby-2-3-1" class="headerlink" title="安装 rvm 与 Ruby 2.3.1"></a>安装 rvm 与 Ruby 2.3.1</h3><p>注意，以下是三行命令，要分别输入，每行都要按接回车键（<code>⏎</code>）执行。以后为了书写方便，经常会把一系列命令放到一个代码块中……</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\curl -sSL https://get.rvm.io | bash -s stable</span><br><span class="line">rvm install 2.3.1</span><br><span class="line">rvm use 2.3.1</span><br></pre></td></tr></table></figure>
<p><code>rvm</code> 是 Ruby 的版本管理工具，其作用是在系统中安装若干个不同版本的 Ruby，且不让它们之间发生冲突。你可以安装很多个版本的 Ruby，比如，刚刚安装了 <code>2.3.1</code>，随后你还可以安装 <code>1.9.2</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rvm install 1.9.2</span><br></pre></td></tr></table></figure>
<p>需要使用 <code>1.9.2</code> 版本的 Ruby 的时候，就可以用这个命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rvm use 1.9.2</span><br></pre></td></tr></table></figure>
<p>也可以随时用这个命令切换回 <code>2.3.1</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rvm use 2.3.1</span><br></pre></td></tr></table></figure>
<p>你也随时可以用这个命令查看自己都安装过哪些版本：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rvm list</span><br></pre></td></tr></table></figure>
<p>想要卸载哪个版本的 Ruby，你就用这样的命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rvm uninstall 1.9.2</span><br></pre></td></tr></table></figure>
<p>下面要接着安装的 <code>nvm</code>，跟 <code>rvm</code> 一个原理，只不过 <code>nvm</code> 是 <code>nodejs</code> 的版本管理器。</p>
<h3 id="安装-nvm-和-node-4-4-5"><a href="#安装-nvm-和-node-4-4-5" class="headerlink" title="安装 nvm 和 node 4.4.5"></a>安装 nvm 和 node 4.4.5</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install nvm</span><br><span class="line">nvm install 4.4.5</span><br><span class="line">nvm use 4.4.5</span><br></pre></td></tr></table></figure>
<p>为什么要安装 4.4.5 这个版本呢？nodejs 有两个版本，一个叫 LTS（Long Term Support，提供长期支持的稳定版），一个叫 Current（提供最新功能的当下版，通常也不够稳定，尚需改进）。很多软件系统都采用这种方式，比如著名的 Ubuntu …… 所以，当我们需要安装什么软件的时候，必须到官方网站上看一看，看看当前的稳定版本是什么，然后选择它就是了。将来你成了高手，啥都敢于、且确实有能力尝鲜的时候，就随便你喽。</p>
<p>如此这般，最基础的开发环境算是完成了 —— 理论上来讲，还有更多的事儿要做，不过，反正也一下子做不过来，就先到这里为止罢。</p>
<p>关于更详细的开发环境设置，请参阅这两个 Github 项目：</p>
<blockquote>
<ul>
<li><a href="https://github.com/nicolashery/mac-dev-setup" target="_blank" rel="external">nicolashery/mac-dev-setup</a></li>
<li><a href="https://github.com/donnemartin/dev-setup" target="_blank" rel="external">donnemartin/dev-setup</a></li>
</ul>
</blockquote>
<p>未来你肯定会反复去看的 —— 因为就是用得着。</p>
<h3 id="安装-Atom"><a href="#安装-Atom" class="headerlink" title="安装 Atom"></a>安装 Atom</h3><p>工程师们对编辑器有各种各样的偏好，vi/vim, emacs, TextMate, Sublimetext… 这些不过是免费的，还有很多收费的…… 问他们用哪个最好，基本上不可能有统一的答案。在这里，我们就不讨论不探究了，就直接开用一个 Github 出品的编辑器罢：<a href="https://atom.io" target="_blank" rel="external">Atom</a>.</p>
<blockquote>
<h4 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h4><p> <strong>永远不要参与编程语言之间或编辑器之间的比较争论</strong> —— 在工程师世界里，那是永无宁日的争论，但价值并不大，事实上，一切争论的价值都不大：<strong>平息争论的能力才是更有价值的能力，若是不能平息争论，就不要参与争论了，因为参与无法平息的争论，本质上就是，耗费了时间耗费了生命却没有任何结果</strong> —— 这是一个很重要的价值观，它会帮你节省无数未来的时间精力，它也有可能让你成为那个最终能够平息争论的人。</p>
</blockquote>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>打开 <code>iTerm</code>，用以下命令安装 <code>Atom</code>：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew cask install atom</span><br></pre></td></tr></table></figure>
<p>关于 <code>brew cask</code> 命令的说明，请参阅其官方网站：<a href="https://caskroom.github.io" target="_blank" rel="external">https://caskroom.github.io</a>…… 学任何工具，第一件事情就是去把官方网站翻个遍，是必须的习惯。</p>
<p>当然，也可以使用传统的安装方法，到 <a href="https://atom.io" target="_blank" rel="external">https://atom.io</a> 去下载 <code>dmg</code> 文件，打开之后，将应用程序拖到 <code>Application</code> 目录中去……</p>
<h4 id="阅读-Atom-官方网站"><a href="#阅读-Atom-官方网站" class="headerlink" title="阅读 Atom 官方网站"></a>阅读 Atom 官方网站</h4><p><code>Atom</code> 的官方网站是，<a href="https://atom.io" target="_blank" rel="external">https://atom.io</a> ，Documentation 栏目里，他们放了一个 <a href="http://flight-manual.atom.io" target="_blank" rel="external">Atom Flight Manual</a> —— 这就是第一步要读的东西。</p>
<p>对于新手来说，至少应该先认真阅读第一章：</p>
<blockquote>
<ul>
<li>Chapter 1: Getting Started</li>
</ul>
</blockquote>
<h4 id="Atom-Cheatsheets"><a href="#Atom-Cheatsheets" class="headerlink" title="Atom Cheatsheets"></a>Atom Cheatsheets</h4><p>拿来任何一个软件工具，快速熟悉并掌握各种快捷键，是一个好习惯 —— 基本上就是耗费半小时而后用一辈子的事情。随便搜索一下 <code>Atom Cheatsheet</code> 就有一个 Cheatsheet 不错：</p>
<blockquote>
<p><a href="http://d2wy8f7a9ursnm.cloudfront.net/atom-editor-cheat-sheet.pdf" target="_blank" rel="external">http://d2wy8f7a9ursnm.cloudfront.net/atom-editor-cheat-sheet.pdf</a></p>
</blockquote>
<p>而 Atom 本身是个工具，所以它的 Cheatsheet 可以做得更为方便，有两个 Package 可以安装试一下：</p>
<blockquote>
<ul>
<li><a href="https://atom.io/packages/atom-shortcuts" target="_blank" rel="external">atom-shortcuts package</a></li>
<li><a href="https://atom.io/packages/keybinding-cheatsheet" target="_blank" rel="external">keybinding-cheatsheet package for Atom</a></li>
</ul>
</blockquote>
<p>熟悉到一定程度之后，就可以卸载它们了。</p>
<p>还有个程序值得试试：<a href="https://www.grandtotal.biz/CheatSheet/" target="_blank" rel="external">CheatSheet</a>，无论什么时候，只要有它在，按住 ⌘ 一会儿，就会跳出一个面板，让你看到所有可用的快捷键。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew cask install cheatsheet</span><br></pre></td></tr></table></figure>
<h3 id="安装-Dash"><a href="#安装-Dash" class="headerlink" title="安装 Dash"></a>安装 Dash</h3><p><a href="https://kapeli.com/dash" target="_blank" rel="external">Dash</a> 是个神奇的个人作品，现在几乎每一个在 Mac 上开发的人都会用到 Dash，估计你也不例外，装上吧，该付费就马上付费…… 想想真的不算贵。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew cask install dash</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>除了各种安装配置之外，你重点要看的是这俩文档：</p>
<blockquote>
<ul>
<li>命令行文档 —— 先熟记那个 <a href="https://github.com/0nn0/terminal-mac-cheatsheet" target="_blank" rel="external">Cheatsheet</a>……（另外，苹果有个官方的文档：<a href="https://developer.apple.com/library/mac/documentation/OpenSource/Conceptual/ShellScripting/CommandLInePrimer/CommandLine.html" target="_blank" rel="external">Command Line Primer</a>）</li>
<li>Atom 官方教程的前两章。</li>
</ul>
</blockquote>
<p>肯定无法一下子全读懂，但“即便读不懂也要读完”，是一个特别神奇的能力，古人都知道“读书千遍其义自见” —— 说的就是这事儿。你必须积累这种能力，切记。</p>
<p>到此为止，你做了很多事情，翻了很多网页，敲了不少字符…… 可还不知道干了什么。别着急，耐心，耐心是唯一的法宝……</p>


    </div>

    <div>



    </div>

    <div>




    </div>

    <footer class="post-footer">

        <div class="post-tags">

            <a href="/tags/人人都是工程师/" rel="tag">#人人都是工程师</a>

        </div>



        <div class="post-nav">
          <div class="post-nav-next post-nav-item">

              <a href="/2016/06/15/makecs-before-starting-anything/" rel="next" title="开始之前……">
                <i class="fa fa-chevron-left"></i> 开始之前……
              </a>

          </div>

          <div class="post-nav-prev post-nav-item">

              <a href="/2016/06/17/makecs-atom-advanced/" rel="prev" title="Atom 编辑器进阶">
                Atom 编辑器进阶 <i class="fa fa-chevron-right"></i>
              </a>

          </div>
        </div>




    </footer>
  </article>



    <div class="post-spread">

    </div>
  </div>


          </div>




  <div class="comments" id="comments">

      <div id="disqus_thread">
        <noscript>
          Please enable JavaScript to view the
          <a href="//disqus.com/?ref_noscript">comments powered by Disqus.</a>
        </noscript>
      </div>

  </div>


        </div>



  <div class="sidebar-toggle">
    <div class="sidebar-toggle-line-wrap">
      <span class="sidebar-toggle-line sidebar-toggle-line-first"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-middle"></span>
      <span class="sidebar-toggle-line sidebar-toggle-line-last"></span>
    </div>
  </div>

  <aside id="sidebar" class="sidebar">
    <div class="sidebar-inner">




        <ul class="sidebar-nav motion-element">
          <li class="sidebar-nav-toc sidebar-nav-active" data-target="post-toc-wrap" >
            文章目录
          </li>
          <li class="sidebar-nav-overview" data-target="site-overview">
            站点概览
          </li>
        </ul>


      <section class="site-overview sidebar-panel ">
        <div class="site-author motion-element" itemprop="author" itemscope itemtype="http://schema.org/Person">
          <img class="site-author-image" itemprop="image"
               src="/images/xiaolai.jpg"
               alt="xiaolai" />
          <p class="site-author-name" itemprop="name">xiaolai</p>
          <p class="site-description motion-element" itemprop="description">学习是一种生活方式</p>
        </div>
        <nav class="site-state motion-element">
          <div class="site-state-item site-state-posts">
            <a href="/archives">
              <span class="site-state-item-count">13</span>
              <span class="site-state-item-name">日志</span>
            </a>
          </div>




            <div class="site-state-item site-state-tags">
              <a href="/tags">
                <span class="site-state-item-count">6</span>
                <span class="site-state-item-name">标签</span>
              </a>
            </div>


        </nav>



        <div class="links-of-author motion-element">


              <span class="links-of-author-item">
                <a href="https://github.com/xiaolai" target="_blank" title="GitHub">

                    <i class="fa fa-fw fa-github"></i>

                  GitHub
                </a>
              </span>

              <span class="links-of-author-item">
                <a href="https://twitter.com/xiaolai" target="_blank" title="Twitter">

                    <i class="fa fa-fw fa-twitter"></i>

                  Twitter
                </a>
              </span>


        </div>







      </section>


        <section class="post-toc-wrap motion-element sidebar-panel sidebar-panel-active">
          <div class="post-toc">




              <div class="post-toc-content"><ol class="nav"><li class="nav-item nav-level-2"><a class="nav-link" href="#小心你的中文输入法"><span class="nav-text">小心你的中文输入法</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#命令行工具（Terminal-iTerm）的基本设置"><span class="nav-text">命令行工具（Terminal/iTerm）的基本设置</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#命令行的使用"><span class="nav-text">命令行的使用</span></a></li><li class="nav-item nav-level-2"><a class="nav-link" href="#安装必要开发环境"><span class="nav-text">安装必要开发环境</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#XCode-Command-Line-Tool"><span class="nav-text">XCode Command Line Tool</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#安装-Homebrew"><span class="nav-text">安装 Homebrew</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#安装-Git"><span class="nav-text">安装 Git</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#安装-rvm-与-Ruby-2-3-1"><span class="nav-text">安装 rvm 与 Ruby 2.3.1</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#安装-nvm-和-node-4-4-5"><span class="nav-text">安装 nvm 和 node 4.4.5</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#安装-Atom"><span class="nav-text">安装 Atom</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#建议"><span class="nav-text">建议</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#安装"><span class="nav-text">安装</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#阅读-Atom-官方网站"><span class="nav-text">阅读 Atom 官方网站</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#Atom-Cheatsheets"><span class="nav-text">Atom Cheatsheets</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#安装-Dash"><span class="nav-text">安装 Dash</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#总结"><span class="nav-text">总结</span></a></li></ol></div>

          </div>
        </section>


    </div>
  </aside>



      </div>
    </main>

    <footer id="footer" class="footer">
      <div class="footer-inner">
        <div class="copyright" >

  &copy;
  <span itemprop="copyrightYear">2016</span>
  <span class="with-love">
    <i class="fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">xiaolai</span>
</div>

<div class="powered-by">
  由 <a class="theme-link" href="http://hexo.io">Hexo</a> 强力驱动
</div>

<div class="theme-info">
  主题 -
  <a class="theme-link" href="https://github.com/iissnan/hexo-theme-next">
    NexT.Pisces
  </a>
</div>




      </div>
    </footer>

    <div class="back-to-top">
      <i class="fa fa-arrow-up"></i>
    </div>
  </div>



<script type="text/javascript">
  if (Object.prototype.toString.call(window.Promise) !== '[object Function]') {
    window.Promise = null;
  }
</script>














  <script type="text/javascript" src="/vendors/jquery/index.js?v=2.1.3"></script>


  <script type="text/javascript" src="/vendors/fastclick/lib/fastclick.min.js?v=1.0.6"></script>


  <script type="text/javascript" src="/vendors/jquery_lazyload/jquery.lazyload.js?v=1.9.7"></script>


  <script type="text/javascript" src="/vendors/velocity/velocity.min.js?v=1.2.1"></script>


  <script type="text/javascript" src="/vendors/velocity/velocity.ui.min.js?v=1.2.1"></script>


  <script type="text/javascript" src="/vendors/fancybox/source/jquery.fancybox.pack.js?v=2.1.5"></script>





  <script type="text/javascript" src="/js/src/utils.js?v=5.0.1"></script>

  <script type="text/javascript" src="/js/src/motion.js?v=5.0.1"></script>







  <script type="text/javascript" src="/js/src/affix.js?v=5.0.1"></script>

  <script type="text/javascript" src="/js/src/schemes/pisces.js?v=5.0.1"></script>




  <script type="text/javascript" src="/js/src/scrollspy.js?v=5.0.1"></script>
<script type="text/javascript" src="/js/src/post-details.js?v=5.0.1"></script>






  <script type="text/javascript" src="/js/src/bootstrap.js?v=5.0.1"></script>









    <script type="text/javascript">
      var disqus_shortname = 'rebornagain';
      var disqus_identifier = '2016/06/16/makecs-basic-dev-env-settup/';
      var disqus_title = '基本开发环境设置';
      var disqus_url = 'http://xiaolai.li/2016/06/16/makecs-basic-dev-env-settup/';

      function run_disqus_script(disqus_script){
        var dsq = document.createElement('script');
        dsq.type = 'text/javascript';
        dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/' + disqus_script;
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
      }

      run_disqus_script('count.js');

        run_disqus_script('embed.js');

    </script>












</body>
</html>
